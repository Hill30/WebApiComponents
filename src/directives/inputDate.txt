inputDate + datepicker
(c) dhilt, 2014.03.13

--------------------------------------------------

I. Поведение, реализуемое в настоящее время.

1. Ввод даты в textinput с клавиатуры в заданном формате без открытия попапа.
2. Попап можно открыть только кликом по иконке календаря.
3. Попап закрывается при клике вне себя и при клике по иконке календаря.
4. Попап закрывается при выборе даты.
5. Дата, выбранная в попапе, попадает в textinput в заданном формате.
6. Попап закрывается на нажатию на escape. Коммит даты в textinput не происходит. Фокус остается на textinput.
7. Попап закрывается по нажатию на tab. Коммит даты в textinput не происходит. Фокус смещается согласно элементам внешней формы, как если бы tab всплывал выше.

II. Дополнительное (и отчасти замещающее) поведение на будущее.

1. При открытии попапа выбирается дата по умолчанию (сегодняшний день).
2. При нажатии enter внутри попапа происходит закрытие попапа и коммит даты в textinput в заданном формате.
3. При нажатии tab внутри попапа выполняется п.7 предыдущей части, но при этом происходит коммит даты, если она выбрана (поскольку конкретной даты в фокусе по результатам действий пользователя может не быть), в textinput в заданном формате.
4. При нажатии left/right внутри попапа осуществляется навигация по месяцам (годам).

--------------------------------------------------

В настоящее основной задачей по datepicker'у является объединение inline- и popup-функционалов, что логически выделено в часть I. Задача изначально проистекает из https://hill30.atlassian.net/browse/AST-106 ([Tab] button doesn't work on Editor screen when focus is on the Overrride Service Date field).

Хочу сказать, что эта проблема (конкретно с табом) никогда никем не решалась, и, например, даже такой элемент, как модальное окно в ангуляре позволяет табаться по "заблокированным" этим окном элементам, в т.ч. и находящимся непосредственно под модальным окном, вне зоны видимости пользователя.

Пока я занят только оберткой для datepicker'а, было решено в принципе блокировать таб в контексте popup-окна. При этом окно закрывается, фокус переходит к следующему элементу. Решение этой задачи позволяет также навешивать другие глобальные обработчики, вроде закрытия окна по ESC.

И, конечно, сделать datepicker-popup нормальным попапом. Который закрывается при клике вне себя.

Все это концептуально укладывается в часть I. Часть II, вероятно, может потребовать переделки самого datepicker'а.

--------------------------------------------------

Опуская промежуточные варианты, в настоящее время закоммичены следующие прототипы по части I: inputDateDropdown и inputDateClickDocument. Оба работают в черновом варианте, есть нюансы.

Обертка datepicker'а в ui.bootstrap.dropdown работает превосходно, за исключением момента с принудительным закрытием. Функция closeMenu директивы dropdown доступна снаружи директивы только через click-handler, привязанный к документу. Соответственно, в коде inputDateDropdown можно наблюдать следующий вырви-глаз:

$._data(document, "events").click[0].handler()

Это можно _немного_ оптимизировать, например, следующим образом. 1) Запоминаем click-handler'ы документа непосредственно перед открытием попапа (это легко, поскольку в текущей редакции попап открывается только по клику по иконке). 2) Тоже самое делаем непосредственно после открытия попапа (это уже немного сложнее, но тоже есть варианты). 3) По разнице массивов вычисляем искомый handler.

Или попробовать выцепить его через id, проставляемый движком ангуляра, но пока я не нашел никакой связи id handler'а, порожденного конкретной директивой, с самой директивой.

Тем не менее, если возиться с попапом и документом, то, кажется, честнее написать свой аналог dropdown. Прототип реализован в директиве inputDateClickDocument.

Наконец, есть вариант попробовать обернуть datepicker в ui.bootstrap.modal. Это, очевидно, overpower и куча приключений с версткой, но зато там точно есть api по внешнему (программному) управлению окном...

--------------------------------------------------

Пример использования директивы в шаблоне (для serviceTracker'а):

<input-date
    value="overrides.serviceDate"
    tabindex="4"
    ng-enter="updateTimesheet(false)"
    is-invalid="form.serviceDate.$error.dateValidator && isFormSubmited">
</input-date>

, где input-date -- это input-date-dropdown или input-date-click-document.

В контроллере никакого дополнительного кода не нужно.